version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: multimodal-postgres
    environment:
      POSTGRES_DB: multimodal_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - multimodal-network

  # Redis for caching
  redis:
    image: redis:alpine
    container_name: multimodal-redis
    ports:
      - "6379:6379"
    networks:
      - multimodal-network

  # MongoDB for document storage
  mongodb:
    image: mongo:latest
    container_name: multimodal-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db
    networks:
      - multimodal-network

  # Main Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multimodal-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/multimodal_db
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:admin123@mongodb:27017/
      - TEXT_ANALYZER_URL=http://text-analyzer:8001
      - IMAGE_ANALYZER_URL=http://image-analyzer:8002
      - VIDEO_ANALYZER_URL=http://video-analyzer:8003
      - FUSION_SERVICE_URL=http://fusion-service:8004
    depends_on:
      - postgres
      - redis
      - mongodb
    volumes:
      - ./uploads:/app/uploads
      - ./models:/app/models
    networks:
      - multimodal-network

  # Text Analyzer Service
  text-analyzer:
    build:
      context: ./services/text-analyzer
      dockerfile: Dockerfile
    container_name: multimodal-text-analyzer
    ports:
      - "8001:8001"
    environment:
      - SERVICE_PORT=8001
      - MODEL_PATH=/app/models
    volumes:
      - ./models/text:/app/models
      - ./temp:/app/temp
    networks:
      - multimodal-network

  # Image Analyzer Service
  image-analyzer:
    build:
      context: ./services/image-analyzer
      dockerfile: Dockerfile
    container_name: multimodal-image-analyzer
    ports:
      - "8002:8002"
    environment:
      - SERVICE_PORT=8002
      - MODEL_PATH=/app/models
    volumes:
      - ./models/image:/app/models
      - ./temp:/app/temp
    networks:
      - multimodal-network

  # Video Analyzer Service
  video-analyzer:
    build:
      context: ./services/video-analyzer
      dockerfile: Dockerfile
    container_name: multimodal-video-analyzer
    ports:
      - "8003:8003"
    environment:
      - SERVICE_PORT=8003
      - MODEL_PATH=/app/models
    volumes:
      - ./models/video:/app/models
      - ./temp:/app/temp
    networks:
      - multimodal-network

  # Fusion Service
  fusion-service:
    build:
      context: ./services/fusion-service
      dockerfile: Dockerfile
    container_name: multimodal-fusion-service
    ports:
      - "8004:8004"
    environment:
      - SERVICE_PORT=8004
      - MODEL_PATH=/app/models
      - TEXT_ANALYZER_URL=http://text-analyzer:8001
      - IMAGE_ANALYZER_URL=http://image-analyzer:8002
      - VIDEO_ANALYZER_URL=http://video-analyzer:8003
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    volumes:
      - ./models/fusion:/app/models
      - ./temp:/app/temp
    networks:
      - multimodal-network

  # Frontend (optional)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: multimodal-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - multimodal-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  multimodal-network:
    driver: bridge