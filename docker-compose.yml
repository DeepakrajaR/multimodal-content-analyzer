version: '3.8'

services:
  # Database Services
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=multimodal_analyzer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo123
    ports:
      - "27017:27017"
    networks:
      - multimodal-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Services
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - media_files:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=multimodal-secret-key-change-in-production
      - POSTGRES_DB=multimodal_analyzer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - MONGODB_DB=multimodal_results
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TEXT_ANALYZER_URL=http://text-analyzer:8001
      - IMAGE_ANALYZER_URL=http://image-analyzer:8002
      - VIDEO_ANALYZER_URL=http://video-analyzer:8003
      - MULTIMODAL_FUSION_URL=http://multimodal-fusion:8004
    depends_on:
      - db
      - redis
      - mongodb
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/schema/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  video-analyzer:
    build:
      context: ./ai-services/video-analyzer
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - PORT=8003
    volumes:
      - video_models:
  fusion_models:
  fusion_models:/app/models
      - temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 60s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A config worker -l info --concurrency=2
    volumes:
      - ./backend:/app
      - media_files:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=multimodal-secret-key-change-in-production
      - POSTGRES_DB=multimodal_analyzer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - MONGODB_DB=multimodal_results
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TEXT_ANALYZER_URL=http://text-analyzer:8001
      - IMAGE_ANALYZER_URL=http://image-analyzer:8002
      - VIDEO_ANALYZER_URL=http://video-analyzer:8003
      - MULTIMODAL_FUSION_URL=http://multimodal-fusion:8004
    depends_on:
      - db
      - redis
      - mongodb
      - backend
    networks:
      - multimodal-network
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  video-analyzer:
    build:
      context: ./ai-services/video-analyzer
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - PORT=8003
    volumes:
      - video_models:
  fusion_models:
  fusion_models:/app/models
      - temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 60s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=multimodal-secret-key-change-in-production
      - POSTGRES_DB=multimodal_analyzer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
      - backend
    networks:
      - multimodal-network
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  video-analyzer:
    build:
      context: ./ai-services/video-analyzer
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - PORT=8003
    volumes:
      - video_models:
  fusion_models:
  fusion_models:/app/models
      - temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 60s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # AI Services
  text-analyzer:
    build:
      context: ./ai-services/text-analyzer
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=production
      - PORT=8001
    volumes:
      - text_models:
  image_models:
  temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/models
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  video-analyzer:
    build:
      context: ./ai-services/video-analyzer
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - PORT=8003
    volumes:
      - video_models:
  fusion_models:
  fusion_models:/app/models
      - temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 60s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Load Balancer (Optional - for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - multimodal-network
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  video-analyzer:
    build:
      context: ./ai-services/video-analyzer
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - PORT=8003
    volumes:
      - video_models:
  fusion_models:
  fusion_models:/app/models
      - temp_files:
  video_models:
  fusion_models:
  fusion_models:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 60s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
  multimodal-fusion:
    build:
      context: ./ai-services/multimodal-fusion
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - PORT=8004
    volumes:
      - fusion_models:/app/models
      - temp_files:/app/temp
    networks:
      - multimodal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    depends_on:
      - text-analyzer
      - image-analyzer
      - video-analyzer
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

networks:
  multimodal-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  media_files:
  text_models:
  image_models:
  temp_files:
  video_models:
  fusion_models:
  fusion_models:




